"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9428],{5777:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(4848),i=n(8453);const r={},a="Directly Apply Delta Blendshape",o={id:"maya/programming/example/rigging/directly_apply_delta_bshape",title:"Directly Apply Delta Blendshape",description:"You cant directly sculpt on the blendshape since it has a different space.",source:"@site/docs/maya/programming/example/rigging/directly_apply_delta_bshape.md",sourceDirName:"maya/programming/example/rigging",slug:"/maya/programming/example/rigging/directly_apply_delta_bshape",permalink:"/docs/maya/programming/example/rigging/directly_apply_delta_bshape",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/maya/programming/example/rigging/directly_apply_delta_bshape.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Space Switch",permalink:"/docs/maya/programming/example/rigging/create_space_switch"},next:{title:"selective_copy_weight",permalink:"/docs/maya/programming/example/rigging/selective_copy_weight"}},p={},c=[];function l(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"directly-apply-delta-blendshape",children:"Directly Apply Delta Blendshape"}),"\n",(0,s.jsx)(t.p,{children:"You cant directly sculpt on the blendshape since it has a different space.\nSo normally I duplicate the model and sculpt in its static state."}),"\n",(0,s.jsx)(t.p,{children:"After which, I applied the static to the blendshape pose.\nThis will generate the delta pose in the background."}),"\n",(0,s.jsx)(t.p,{children:"The script to apply"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"import pymel.core as pm\n\ndef go():\n    target = pm.ls('target')[0] # driven    \n    source = pm.ls('source')[0] # driver\n    for vtx in source.vtx:\n        idx = vtx.index()\n        t = pm.xform(vtx, q=True, t=True)\n\n        output = target.vtx[idx]\n        pm.move(output, t, a=True)\n        \ngo()\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Version with using it on a specified points\nimport maya.cmds as cmds\nimport pymel.core as pm\n\n\n# Get the selection from the set named 'point_selection'\nselected_points = cmds.sets('point_selection', q=True)\n\ndef flatten_list(selected_objects): # selected objects is a vertex list\n    # Check if there are any objects in the selection\n    vertex_list = []\n    if selected_objects:\n        for obj in selected_objects:\n            if cmds.objectType(obj) == 'mesh':  # Check if the object is a mesh\n                # Extracting the number range from the vertex string\n                vertex_range = obj.split('[')[-1].split(':')\n                start_index = int(vertex_range[0])\n                end_index = int(vertex_range[-1].rstrip(']'))\n\n                # Constructing individual vertex names\n                for i in range(start_index, end_index + 1):\n                    vertex_list.append(f\"{obj.split('.')[0]}.vtx[{i}]\")\n\n    else:\n        vertex_list = []\n    \n    return vertex_list        \n\n\ndef transfer_points(selected_points=None):\n    source = pm.ls('source_geo')[0]\n    target = pm.ls('target_geo')[0]\n\n    if selected_points:\n        vertex_list = selected_points\n    else:\n        vertex_list = source.vtx\n\n    for vtx in vertex_list:\n        \n        vtx = pm.PyNode(vtx)\n        idx = vtx.index()\n        t = pm.xform(vtx, q=True, t=True)\n\n        output = target.vtx[idx]\n        pm.move(output, t, a=True)\n        \nprocessed_points = flatten_list(selected_points)\ntransfer_points(selected_points=processed_points)\n\n\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);