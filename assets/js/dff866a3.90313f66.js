"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5371],{403:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=o(4848),s=o(8453);const i={},r=void 0,u={id:"houdini/log/some_tutorials_notes",title:"some_tutorials_notes",description:"",source:"@site/docs/houdini/log/some_tutorials_notes.md",sourceDirName:"houdini/log",slug:"/houdini/log/some_tutorials_notes",permalink:"/docs/houdini/log/some_tutorials_notes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/houdini/log/some_tutorials_notes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting The Max and Min Values",permalink:"/docs/houdini/log/getting_the_max_and_min_values"},next:{title:"subdividing disconnected points connect to adjacent pieces.",permalink:"/docs/houdini/log/subidividing_unconnected_points"}},a={},c=[];function d(t){return(0,n.jsx)(n.Fragment,{})}function l(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d()}},8453:(t,e,o)=>{o.d(e,{R:()=>r,x:()=>u});var n=o(6540);const s={},i=n.createContext(s);function r(t){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function u(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),n.createElement(i.Provider,{value:e},t.children)}}}]);