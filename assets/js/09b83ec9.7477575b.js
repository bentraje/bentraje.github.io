"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1780],{4500:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>_,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(4848),a=t(8453);const o={},c=void 0,i={id:"cinema4d/programming/specific/recreate_layers_from_3ds_to_c4d",title:"recreate_layers_from_3ds_to_c4d",description:"",source:"@site/docs/cinema4d/programming/specific/recreate_layers_from_3ds_to_c4d.md",sourceDirName:"cinema4d/programming/specific",slug:"/cinema4d/programming/specific/recreate_layers_from_3ds_to_c4d",permalink:"/docs/cinema4d/programming/specific/recreate_layers_from_3ds_to_c4d",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cinema4d/programming/specific/recreate_layers_from_3ds_to_c4d.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"recreate_advance_skeleton_rig",permalink:"/docs/cinema4d/programming/specific/recreate_advance_skeleton/recreate_advance_skeleton_rig"},next:{title:"Rigging",permalink:"/docs/cinema4d/rigging"}},s={},d=[];function m(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import c4d\nimport json\n\ndef create_hierarchy(parent, data, doc):\n    for item in data:\n        name = item["name"] + "_grp"\n\n\n        # Check if the object already exists\n        obj = doc.SearchObject(name)\n        \n        # If it does not exist, create a new null object\n        if obj is None:\n            obj = c4d.BaseObject(c4d.Onull)\n            obj.SetName(name)\n            doc.InsertObject(obj)\n\n        # If a parent is provided, set the parent of the new object\n        if parent:\n            obj.InsertUnder(parent)\n\n        # Recursively add children\n        if "children" in item and item["children"]:\n            create_hierarchy(obj, item["children"], doc)\n\ndef create_layers():\n    # Path to the JSON file\n    param_path = r"C:/users/BT/Desktop/layers_hierarchy.json"\n    \n    with open(param_path, "r") as read_file:\n        data = json.load(read_file)\n\n    # Get the active document\n    doc = c4d.documents.GetActiveDocument()\n\n    # Start an undo block\n    doc.StartUndo()\n\n    try:\n        # Create the hierarchy\n        create_hierarchy(None, data, doc)\n    finally:\n        # End the undo block\n        doc.EndUndo()\n    \n    # Refresh Cinema 4D to show the new objects\n    c4d.EventAdd()\n\ndef reparent_objects():\n    param_path = r"C:/users/BT/Desktop/layers_hierarchy_with_geo.json"\n\n    doc = c4d.documents.GetActiveDocument()\n    with open(param_path, "r") as read_file:\n        data = json.load(read_file)\n\n    doc.StartUndo()\n\n    for d, k in data.items():\n        print ("group_name", d)\n\n        null_obj = c4d.BaseObject(c4d.Onull)\n        null_obj.SetName(d + "_grp")\n        doc.InsertObject(null_obj)\n\n        for obj_name in k[0]:\n            scene_obj = doc.SearchObject(obj_name)\n            result = False\n            if scene_obj:\n                result = True\n\n                scene_obj.InsertUnder(null_obj)\n\n            if not result:\n                print (obj_name, "does not exist")\n        print ("=====")\n\n    doc.EndUndo()\n\n# Execute the main function\nif __name__ == \'__main__\':\n    reparent_objects()\n    create_layers()\n'})})}function _(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);