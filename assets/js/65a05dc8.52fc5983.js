"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8181],{1778:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=r(4848),i=r(8453);const s={},a="Karma",o={id:"rendering/karma",title:"Karma",description:"General",source:"@site/docs/rendering/karma.md",sourceDirName:"rendering",slug:"/rendering/karma",permalink:"/docs/rendering/karma",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rendering/karma.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rendering",permalink:"/docs/rendering/index (LAPTOP-ECKQA8BC's conflicted copy 2024-09-20)"},next:{title:"Octane",permalink:"/docs/rendering/octane (LAPTOP-ECKQA8BC's conflicted copy 2024-09-20)"}},l={},c=[];function d(e){const n={em:"em",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"karma",children:"Karma"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"General"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Only available in Houdini. Replaces Mantra."}),"\n",(0,t.jsx)(n.li,{children:"Mainly used in conjunction with USD Solaris"}),"\n",(0,t.jsx)(n.li,{children:"Before a material can be assigned to geometry in Solaris its path must have been previously defined in the Scene Graph Tree before assignment."}),"\n",(0,t.jsxs)(n.li,{children:["There are three primary LOP nodes that can be used to apply shaders to geometry in Solaris.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Material Library  - Can create and assign shaders to objects."}),"\n",(0,t.jsx)(n.li,{children:"Assign Material  - Only assigns shaders to objects but has more controls for overriding material assignments."}),"\n",(0,t.jsx)(n.li,{children:"Edit Material - Edits the existing materials from the imported USD scene."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Material Path is the path for scene graph not the path in Math Context (like the usual Houdini Way)"}),"\n",(0,t.jsx)(n.li,{children:"Using the dirt mask and rounded edge mask. karma"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Nodes"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Mtlx Geometry Property Value"}),". It's like retrieving the point, prim and attributes."]}),"\n",(0,t.jsx)(n.li,{}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Workflow"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Quick Debug. Click on the node and hit X. To preview it on the material"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);