"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3287],{6039:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var s=t(4848),o=t(8453);const a={},i=void 0,r={id:"maya/programming/pymel",title:"pymel",description:"pymel",source:"@site/docs/maya/programming/pymel.md",sourceDirName:"maya/programming",slug:"/maya/programming/pymel",permalink:"/docs/maya/programming/pymel",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/maya/programming/pymel.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Open Maya",permalink:"/docs/maya/programming/openmaya"},next:{title:"rigging",permalink:"/docs/maya/programming/rigging"}},l={},c=[];function d(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"pymel"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"General"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Pymel wraps around the mel, python.cmds. and maya.openmaya."}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://help.autodesk.com/cloudhelp/2022/ENU/Maya-Tech-Docs/PyMel/whats_new.html",children:"Official Documentation"})}),"\n",(0,s.jsxs)(n.li,{children:["Python has its default ",(0,s.jsx)(n.code,{children:"os.path"})," module. PyMEL also has its own ",(0,s.jsx)(n.a,{href:"http://www.jason-parks.com/artoftech/?p=289",children:"implementation"}),". They are not mutually exclusive. You can use both in one script."]}),"\n",(0,s.jsx)(n.li,{children:"nt is node type. dt is data type"}),"\n",(0,s.jsxs)(n.li,{children:["PENDING: Assign materials in PyMel (",(0,s.jsx)(n.a,{href:"https://discourse.techart.online/t/assigning-a-material-using-pymel/1240/9",children:"https://discourse.techart.online/t/assigning-a-material-using-pymel/1240/9"}),")","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://gist.github.com/taikomatsu/f1021a0d01a22309e67f9ef928040e8c",children:"https://gist.github.com/taikomatsu/f1021a0d01a22309e67f9ef928040e8c"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"TO DO"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"script to determine in maya if there is a difference between the skinculster one and off"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Get object based on name\nobj = pm.PyNode('pCube1')\nobj = pm.nt.Joint('joint1') \nobjects = pm.ls(['Object_A', 'Object_B'])\n\n# Get objects selected\nobj = pm.selected()\n\n# Select all based on node type\nobj_sel = pm.ls(type=\"displayLayer\")\n\n# Select all based on wildcard search\nobj_sel = pm.ls(\"*_con\") # wild card search\nobj_sel = pm.ls(\"*Sphere*\", type = \"transform\") # wild card search\n\n# Get node based on nodetype\n# connections method only work on the shape node\nfor node in obj.getShape().connections():\n    if node.nodeType() == 'skinCluster':\n        print (node.nodeType())\n        sc_node = node\n\n# Alternative on getting the shape and actually any other connection depending on the index\npm.selected()[0].listHistory()[0]\n\n# Alternative on getting the skinCluster node\npm.PyNode('pCube1').listHistory(type=\"skinCluster\")\n\n# Determine if the verts are on boundary\nfor vert in shapeNode.verts:\n    if vert.isOnBoundary():\n        doSomething()\n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Links"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Most of the links here are old presentation. Fortunately, there's not much changes in Maya API and as such most of them are still applicable. There might be some syntax difference since Maya switched to Python 3 on 2022 release."}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=vTMomfVYmH4&ab_channel=RiggingDojo",children:"Rigging Dojo Live Jason Parks Power Python for Maya 30 Jan 2013"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);