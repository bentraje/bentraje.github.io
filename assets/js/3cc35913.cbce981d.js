"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8633],{4791:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=a(4848),r=a(8453);const o={},i=void 0,s={id:"maya/programming/example/recreate_layers_from_3ds",title:"recreate_layers_from_3ds",description:"",source:"@site/docs/maya/programming/example/recreate_layers_from_3ds.md",sourceDirName:"maya/programming/example",slug:"/maya/programming/example/recreate_layers_from_3ds",permalink:"/docs/maya/programming/example/recreate_layers_from_3ds",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/maya/programming/example/recreate_layers_from_3ds.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"create_rivet_from_selection_set",permalink:"/docs/maya/programming/example/recreate_groups_from_houdini_to_maya/create_rivet_from_selection_set"},next:{title:"Batch Constraint Joint to Controls",permalink:"/docs/maya/programming/example/rigging/batch_constraint_joint_to_controls"}},m={},c=[];function d(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import maya.cmds as cmds\nimport json\n\n\n# Function to create the hierarchy\ndef create_hierarchy(parent, data):\n    for item in data:\n        # Create an empty group (null object)\n        name = None\n        \n        if cmds.objExists(item["name"]):\n            name = item["name"]\n\n        else:\n            null = cmds.group(empty=True, name=item["name"])\n        \n        # Parent the null object to the parent if a parent is provided\n        if parent:\n            cmds.parent(null, parent)\n        \n        # Recursively add children\n        if "children" in item and item["children"]:\n            create_hierarchy(null, item["children"])\n\n# Main function\ndef main():\n    # Parse the JSON data\n    #data = json.loads(json_data)\n    param_path = r"C:/users/BT/Desktop/layers_hierarchy.json"\n    with open(param_path, "r") as read_file:\n        data = json.load(read_file)    \n\n    # Create the hierarchy\n    create_hierarchy(None, data)\n\n# Run the main function\nmain()\n\n'})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var t=a(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);